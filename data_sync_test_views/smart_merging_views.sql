-- Smart Merging Views SQL
-- Generated to fix CSV-only views and eliminate JSON data loss
-- Replaces simple CSV SELECT with LEFT JOIN + COALESCE pattern

-- =============================================================================
-- FINAL_view_csv_json_contacts
-- Fixes data loss by merging CSV and JSON sources with JSON priority
-- =============================================================================

DROP VIEW IF EXISTS FINAL_view_csv_json_contacts;

CREATE VIEW FINAL_view_csv_json_contacts AS
SELECT
    csv.accounts_receivable,
    json.ach_supported,
    csv.bank_account_payment,
    csv.billing_address,
    csv.billing_attention,
    csv.billing_city,
    csv.billing_code,
    csv.billing_country,
    csv.billing_county,
    csv.billing_fax,
    csv.billing_phone,
    csv.billing_state,
    csv.billing_street2,
    csv.branch_id,
    csv.branch_name,
    COALESCE(json.cf_customer_category, csv.cf_customer_category) AS cf_customer_category,
    json.cf_customer_category_unformatted,
    json.cf_customer_owner,
    json.cf_customer_owner_unformatted,
    csv.cf_customer_sales_executive,
    COALESCE(json.cf_market_region, csv.cf_market_region) AS cf_market_region,
    json.cf_market_region_unformatted,
    COALESCE(json.cf_special_scheme_targets, csv.cf_special_scheme_targets) AS cf_special_scheme_targets,
    json.cf_special_scheme_targets_unformatted,
    csv.company_id,
    COALESCE(json.company_name, csv.company_name) AS company_name,
    csv.contact_address_id,
    COALESCE(json.contact_id, csv.contact_id) AS contact_id,
    COALESCE(json.contact_name, csv.contact_name) AS contact_name,
    COALESCE(json.contact_type, csv.contact_type) AS contact_type,
    json.contact_type_formatted,
    COALESCE(json.created_time, csv.created_time) AS created_time,
    json.created_time_formatted,
    csv.created_timestamp,
    csv.credit_limit,
    COALESCE(json.currency_code, csv.currency_code) AS currency_code,
    json.currency_id,
    json.custom_field_hash,
    json.custom_fields,
    json.customer_credit_limit,
    json.customer_name,
    COALESCE(json.customer_sub_type, csv.customer_sub_type) AS customer_sub_type,
    csv.department,
    csv.designation,
    csv.display_name,
    json.email,
    csv.email_id,
    COALESCE(json.facebook, csv.facebook) AS facebook,
    COALESCE(json.first_name, csv.first_name) AS first_name,
    json.has_attachment,
    json.is_linked_with_zohocrm,
    json.language_code,
    json.language_code_formatted,
    COALESCE(json.last_modified_time, csv.last_modified_time) AS last_modified_time,
    json.last_modified_time_formatted,
    COALESCE(json.last_name, csv.last_name) AS last_name,
    csv.last_sync_time,
    json.mobile,
    csv.mobile_phone,
    csv.notes,
    csv.opening_balance,
    csv.opening_balance_exchange_rate,
    json.outstanding_payable_amount,
    json.outstanding_payable_amount_bcy,
    json.outstanding_receivable_amount,
    json.outstanding_receivable_amount_bcy,
    csv.owner_name,
    COALESCE(json.payment_terms, csv.payment_terms) AS payment_terms,
    COALESCE(json.payment_terms_label, csv.payment_terms_label) AS payment_terms_label,
    COALESCE(json.phone, csv.phone) AS phone,
    csv.portal_enabled,
    json.portal_status,
    json.portal_status_formatted,
    csv.price_list,
    csv.primary_contact_id,
    csv.region,
    csv.salutation,
    csv.shipping_address,
    csv.shipping_attention,
    csv.shipping_city,
    csv.shipping_code,
    csv.shipping_country,
    csv.shipping_county,
    csv.shipping_fax,
    csv.shipping_phone,
    csv.shipping_state,
    csv.shipping_street2,
    csv.siret,
    csv.skype_identity,
    COALESCE(json.source, csv.source) AS source,
    COALESCE(json.status, csv.status) AS status,
    json.tags,
    csv.tax_name,
    csv.tax_percentage,
    csv.tax_type,
    csv.taxable,
    csv.track_tds,
    COALESCE(json.twitter, csv.twitter) AS twitter,
    json.unused_credits_payable_amount,
    json.unused_credits_payable_amount_bcy,
    json.unused_credits_receivable_amount,
    json.unused_credits_receivable_amount_bcy,
    csv.updated_timestamp,
    csv.vehicle,
    json.vendor_name,
    COALESCE(json.website, csv.website) AS website,
    (CASE,
        WHEN json.contact_id IS NOT NULL THEN 'JSON',
        ELSE 'CSV',
    END) AS data_source,
    (CASE,
        WHEN json.contact_id IS NOT NULL THEN 1,
        ELSE 2,
    END) AS source_priority
FROM csv_contacts csv
LEFT JOIN json_contacts json ON csv.contact_id = json.contact_id
WHERE
    COALESCE(json.display_name, csv.display_name) IS NOT NULL
    OR COALESCE(json.company_name, csv.company_name) IS NOT NULL
    OR COALESCE(json.first_name, csv.first_name) IS NOT NULL
    OR COALESCE(json.last_name, csv.last_name) IS NOT NULL;

-- =============================================================================
-- FINAL_view_csv_json_customer_payments
-- Fixes data loss by merging CSV and JSON sources with JSON priority
-- =============================================================================

DROP VIEW IF EXISTS FINAL_view_csv_json_customer_payments;

CREATE VIEW FINAL_view_csv_json_customer_payments AS
SELECT
    json.account_id,
    json.account_name,
    COALESCE(json.amount, csv.amount) AS amount,
    csv.amount_applied_to_invoice,
    json.applied_invoices,
    csv.bank_charges,
    json.bcy_amount,
    json.bcy_refunded_amount,
    json.bcy_unused_amount,
    COALESCE(json.branch_id, csv.branch_id) AS branch_id,
    COALESCE(json.branch_name, csv.branch_name) AS branch_name,
    COALESCE(json.created_time, csv.created_time) AS created_time,
    csv.created_timestamp,
    csv.currency_code,
    json.custom_fields_list,
    COALESCE(json.customer_id, csv.customer_id) AS customer_id,
    COALESCE(json.customer_name, csv.customer_name) AS customer_name,
    csv.customer_payment_id,
    COALESCE(json.date, csv.date) AS date,
    csv.deposit_to,
    csv.deposit_to_account_code,
    COALESCE(json.description, csv.description) AS description,
    json.documents,
    csv.early_payment_discount,
    csv.exchange_rate,
    json.gateway_transaction_id,
    json.has_attachment,
    csv.invoice_date,
    csv.invoice_number,
    json.invoice_numbers,
    csv.invoice_payment_applied_date,
    csv.invoice_payment_id,
    json.last_four_digits,
    json.last_modified_time,
    json.location_id,
    csv.mode,
    json.payment_gateway,
    json.payment_id,
    json.payment_mode,
    json.payment_mode_formatted,
    COALESCE(json.payment_number, csv.payment_number) AS payment_number,
    csv.payment_number_prefix,
    csv.payment_number_suffix,
    json.payment_status,
    COALESCE(json.payment_type, csv.payment_type) AS payment_type,
    COALESCE(json.reference_number, csv.reference_number) AS reference_number,
    json.retainerinvoice_id,
    json.settlement_status,
    json.tags,
    csv.tax_account,
    json.tax_account_id,
    json.tax_account_name,
    json.tax_amount_withheld,
    COALESCE(json.unused_amount, csv.unused_amount) AS unused_amount,
    csv.updated_timestamp,
    csv.withholding_tax_amount,
    (CASE,
        WHEN json.customer_payment_id IS NOT NULL THEN 'JSON',
        ELSE 'CSV',
    END) AS data_source,
    (CASE,
        WHEN json.customer_payment_id IS NOT NULL THEN 1,
        ELSE 2,
    END) AS source_priority
FROM csv_customer_payments csv
LEFT JOIN json_customer_payments json ON csv.customer_payment_id = json.customer_payment_id
WHERE
    COALESCE(json.payment_number, csv.payment_number) IS NOT NULL;

-- =============================================================================
-- FINAL_view_csv_json_items
-- Fixes data loss by merging CSV and JSON sources with JSON priority
-- =============================================================================

DROP VIEW IF EXISTS FINAL_view_csv_json_items;

CREATE VIEW FINAL_view_csv_json_items AS
SELECT
    csv.account,
    csv.account_code,
    json.account_id,
    json.account_name,
    json.actual_available_stock,
    json.available_stock,
    json.can_be_purchased,
    json.can_be_sold,
    COALESCE(json.cf_item_location, csv.cf_item_location) AS cf_item_location,
    json.cf_item_location_unformatted,
    csv.cf_m_box,
    COALESCE(json.cf_manufacturer, csv.cf_manufacturer) AS cf_manufacturer,
    json.cf_manufacturer_unformatted,
    COALESCE(json.cf_product_category, csv.cf_product_category) AS cf_product_category,
    json.cf_product_category_unformatted,
    COALESCE(json.cf_product_sale_category, csv.cf_product_sale_category) AS cf_product_sale_category,
    json.cf_product_sale_category_unformatted,
    csv.cf_s_box_qty,
    COALESCE(json.cf_sku_category, csv.cf_sku_category) AS cf_sku_category,
    json.cf_sku_category_unformatted,
    json.created_time,
    csv.created_timestamp,
    COALESCE(json.description, csv.description) AS description,
    json.has_attachment,
    json.image_document_id,
    json.image_name,
    json.image_type,
    csv.inventory_account,
    csv.inventory_account_code,
    csv.inventory_valuation_method,
    json.is_linked_with_zohocrm,
    COALESCE(json.item_id, csv.item_id) AS item_id,
    COALESCE(json.item_name, csv.item_name) AS item_name,
    COALESCE(json.item_type, csv.item_type) AS item_type,
    json.last_modified_time,
    csv.last_sync_time,
    json.name,
    csv.opening_stock,
    csv.opening_stock_value,
    COALESCE(json.product_type, csv.product_type) AS product_type,
    csv.purchase_account,
    csv.purchase_account_code,
    json.purchase_account_id,
    json.purchase_account_name,
    COALESCE(json.purchase_description, csv.purchase_description) AS purchase_description,
    COALESCE(json.purchase_rate, csv.purchase_rate) AS purchase_rate,
    csv.purchase_tax_name,
    csv.purchase_tax_percentage,
    csv.purchase_tax_type,
    COALESCE(json.rate, csv.rate) AS rate,
    csv.reference_id,
    csv.region,
    json.reorder_level,
    csv.reorder_point,
    COALESCE(json.sku, csv.sku) AS sku,
    COALESCE(json.source, csv.source) AS source,
    COALESCE(json.status, csv.status) AS status,
    COALESCE(json.stock_on_hand, csv.stock_on_hand) AS stock_on_hand,
    json.tags,
    json.tax_id,
    COALESCE(json.tax_name, csv.tax_name) AS tax_name,
    COALESCE(json.tax_percentage, csv.tax_percentage) AS tax_percentage,
    csv.tax_type,
    json.track_inventory,
    json.unit,
    csv.updated_timestamp,
    csv.usage_unit,
    csv.vehicle,
    csv.vendor,
    json.zcrm_product_id,
    (CASE,
        WHEN json.item_id IS NOT NULL THEN 'JSON',
        ELSE 'CSV',
    END) AS data_source,
    (CASE,
        WHEN json.item_id IS NOT NULL THEN 1,
        ELSE 2,
    END) AS source_priority
FROM csv_items csv
LEFT JOIN json_items json ON csv.item_id = json.item_id
WHERE
    COALESCE(json.item_name, csv.item_name) IS NOT NULL
    OR COALESCE(json.sku, csv.sku) IS NOT NULL
    OR COALESCE(json.description, csv.description) IS NOT NULL;

-- =============================================================================
-- FINAL_view_csv_json_sales_orders
-- Fixes data loss by merging CSV and JSON sources with JSON priority
-- =============================================================================

DROP VIEW IF EXISTS FINAL_view_csv_json_sales_orders;

CREATE VIEW FINAL_view_csv_json_sales_orders AS
SELECT
    csv.account,
    csv.account_code,
    csv.adjustment,
    csv.adjustment_description,
    json.bcy_total,
    csv.billing_address,
    csv.billing_city,
    csv.billing_code,
    csv.billing_country,
    csv.billing_fax,
    csv.billing_phone,
    csv.billing_state,
    csv.billing_street2,
    COALESCE(json.branch_id, csv.branch_id) AS branch_id,
    COALESCE(json.branch_name, csv.branch_name) AS branch_name,
    csv.cf_pending_items_delivery,
    COALESCE(json.cf_region, csv.cf_region) AS cf_region,
    json.cf_region_unformatted,
    json.color_code,
    json.company_name,
    json.created_time,
    csv.created_timestamp,
    COALESCE(json.currency_code, csv.currency_code) AS currency_code,
    json.currency_id,
    json.current_sub_status,
    json.current_sub_status_id,
    json.custom_fields_list,
    csv.custom_status,
    COALESCE(json.customer_id, csv.customer_id) AS customer_id,
    COALESCE(json.customer_name, csv.customer_name) AS customer_name,
    json.date,
    json.delivery_date,
    COALESCE(json.delivery_method, csv.delivery_method) AS delivery_method,
    json.delivery_method_id,
    csv.discount,
    csv.discount_amount,
    csv.discount_type,
    json.due_by_days,
    json.due_in_days,
    json.email,
    csv.entity_discount_amount,
    csv.entity_discount_percent,
    csv.exchange_rate,
    csv.expected_shipment_date,
    json.has_attachment,
    json.invoiced_status,
    json.invoiced_sub_status,
    json.invoiced_sub_status_id,
    csv.is_discount_before_tax,
    json.is_emailed,
    csv.is_inclusive_tax,
    json.is_manually_fulfilled,
    json.is_scheduled_for_quick_shipment_create,
    json.is_viewed_in_mail,
    csv.item_cf_sku_category,
    csv.item_desc,
    csv.item_name,
    csv.item_price,
    csv.item_tax,
    csv.item_tax_amount,
    csv.item_tax_percent,
    csv.item_tax_type,
    csv.item_total,
    csv.kit_combo_item_name,
    json.last_modified_time,
    json.location_id,
    json.mail_first_viewed_time,
    json.mail_last_viewed_time,
    csv.notes,
    csv.order_date,
    json.order_fulfillment_type,
    json.order_status,
    json.order_sub_status,
    json.order_sub_status_id,
    json.paid_status,
    csv.payment_terms,
    csv.payment_terms_label,
    json.pickup_location_id,
    csv.product_id,
    csv.project_id,
    csv.project_name,
    csv.quantity_cancelled,
    COALESCE(json.quantity_invoiced, csv.quantity_invoiced) AS quantity_invoiced,
    csv.quantity_ordered,
    COALESCE(json.reference_number, csv.reference_number) AS reference_number,
    csv.region,
    csv.sales_order_id,
    csv.sales_order_number,
    csv.sales_person,
    json.salesorder_id,
    json.salesorder_number,
    json.salesperson_name,
    json.shipment_date,
    json.shipment_days,
    json.shipped_status,
    csv.shipping_address,
    csv.shipping_charge,
    csv.shipping_charge_tax_amount,
    csv.shipping_charge_tax_id,
    csv.shipping_charge_tax_name,
    csv.shipping_charge_tax_percent,
    csv.shipping_charge_tax_type,
    csv.shipping_city,
    csv.shipping_code,
    csv.shipping_country,
    csv.shipping_fax,
    csv.shipping_phone,
    csv.shipping_state,
    csv.shipping_street2,
    csv.sku,
    COALESCE(json.source, csv.source) AS source,
    COALESCE(json.status, csv.status) AS status,
    csv.subtotal,
    json.tags,
    csv.tax_id,
    csv.tds_amount,
    csv.tds_name,
    csv.tds_percentage,
    csv.tds_type,
    csv.template_name,
    csv.terms_conditions,
    COALESCE(json.total, csv.total) AS total,
    json.total_invoiced_amount,
    csv.updated_timestamp,
    csv.usage_unit,
    csv.vehicle,
    json.zcrm_potential_id,
    json.zcrm_potential_name,
    (CASE,
        WHEN json.sales_order_id IS NOT NULL THEN 'JSON',
        ELSE 'CSV',
    END) AS data_source,
    (CASE,
        WHEN json.sales_order_id IS NOT NULL THEN 1,
        ELSE 2,
    END) AS source_priority
FROM csv_sales_orders csv
LEFT JOIN json_sales_orders json ON csv.sales_order_id = json.sales_order_id
WHERE
    COALESCE(json.sales_order_number, csv.sales_order_number) IS NOT NULL
    OR COALESCE(json.customer_name, csv.customer_name) IS NOT NULL
    OR COALESCE(json.order_date, csv.order_date) IS NOT NULL;

-- =============================================================================
-- FINAL_view_csv_json_vendor_payments
-- Fixes data loss by merging CSV and JSON sources with JSON priority
-- =============================================================================

DROP VIEW IF EXISTS FINAL_view_csv_json_vendor_payments;

CREATE VIEW FINAL_view_csv_json_vendor_payments AS
SELECT
    json.ach_gw_transaction_id,
    json.ach_payment_status,
    COALESCE(json.amount, csv.amount) AS amount,
    json.balance,
    csv.bank_reference_number,
    json.bcy_amount,
    json.bcy_balance,
    csv.bill_amount,
    csv.bill_date,
    csv.bill_number,
    json.bill_numbers,
    csv.bill_payment_applied_date,
    COALESCE(json.branch_id, csv.branch_id) AS branch_id,
    COALESCE(json.branch_name, csv.branch_name) AS branch_name,
    json.check_details,
    json.created_time,
    csv.created_timestamp,
    COALESCE(json.currency_code, csv.currency_code) AS currency_code,
    json.currency_id,
    COALESCE(json.date, csv.date) AS date,
    COALESCE(json.description, csv.description) AS description,
    csv.email_id,
    COALESCE(json.exchange_rate, csv.exchange_rate) AS exchange_rate,
    json.has_attachment,
    json.is_ach_payment,
    json.is_paid_via_print_check,
    json.last_modified_time,
    json.location_id,
    csv.mode,
    csv.paid_through,
    csv.paid_through_account_code,
    json.paid_through_account_id,
    json.paid_through_account_name,
    json.payment_id,
    json.payment_mode,
    COALESCE(json.payment_number, csv.payment_number) AS payment_number,
    csv.payment_number_prefix,
    csv.payment_number_suffix,
    csv.payment_status,
    csv.pi_payment_id,
    COALESCE(json.reference_number, csv.reference_number) AS reference_number,
    json.status,
    json.tags,
    csv.tax_account,
    csv.unused_amount,
    csv.updated_timestamp,
    json.vendor_id,
    COALESCE(json.vendor_name, csv.vendor_name) AS vendor_name,
    csv.vendor_payment_id,
    csv.withholding_tax_amount,
    csv.withholding_tax_amount_bcy,
    (CASE,
        WHEN json.vendor_payment_id IS NOT NULL THEN 'JSON',
        ELSE 'CSV',
    END) AS data_source,
    (CASE,
        WHEN json.vendor_payment_id IS NOT NULL THEN 1,
        ELSE 2,
    END) AS source_priority
FROM csv_vendor_payments csv
LEFT JOIN json_vendor_payments json ON csv.vendor_payment_id = json.vendor_payment_id
WHERE
    COALESCE(json.payment_number, csv.payment_number) IS NOT NULL;

